---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
spec:
  selector:
    matchLabels:
      app: kafka-broker
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: jwilder/dockerize:0.6.0
          command:
            - /bin/sh
            - -c
            - --
          args:
            - dockerize -wait tcp://zookeeper-service.{{.Release.Namespace}}.svc.cluster.local:2181 -timeout "3600s"; echo "Successfully connected to Zookeeper"
          imagePullPolicy: IfNotPresent
      containers:
        - name: kafka-broker
          image: confluentinc/cp-kafka:7.3.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
              name: plaintext
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service.{{.Release.Namespace}}.svc.cluster.local:2181"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-broker.{{.Release.Namespace}}.svc.cluster.local:9092,PLAINTEXT_INTERNAL://kafka-broker.{{.Release.Namespace}}.svc.cluster.local:29092"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_RETENTION_MS
              value: "600000"
            - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
              value: "60000"
            - name: KAFKA_TRANSACTION_MAX_TIMEOUT_MS
              value: "3600000"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"

